// CommentList.tsx
import AvatarCus from '@/shared/AvartarCus';
import { Star } from 'lucide-react';
import { DEMO_AUTHORS } from '@/data/authors'; // ƒë∆∞·ªùng d·∫´n t·ªõi file export DEMO_AUTHORS

interface CommentListingDataType {
    name: string;
    avatar?: string;
    date: string;
    comment: string;
    starPoint: number;
}

export interface CommentListingProps {
    className?: string;
    data: CommentListingDataType;
    hasListingTitle?: boolean;
}

const CommentListing = ({
    className = '',
    data,
    hasListingTitle,
}: CommentListingProps) => {
    return (
        <div className={`cus-CommentListing flex space-x-4 ${className}`}>
            <div className='pt-0.5'>
                <AvatarCus
                    sizeClass='h-10 w-10 text-lg'
                    radius='rounded-full'
                    userName={data.name}
                    imgUrl={data.avatar} // üëà truy·ªÅn avatar t·ª´ data
                />
            </div>
            <div className='flex-grow'>
                <div className='flex justify-between space-x-3'>
                    <div className='flex flex-col'>
                        <div className='text-sm font-semibold'>
                            <span>{data.name}</span>
                            {hasListingTitle && (
                                <>
                                    <span className='text-neutral-500 dark:text-neutral-400 font-normal'>
                                        {` ƒë√°nh gi√° trong `}
                                    </span>
                                    <a href='/'>Ph√≤ng ch·ªù</a>
                                </>
                            )}
                        </div>
                        <span className='text-sm text-neutral-500 dark:text-neutral-400 mt-0.5'>
                            {data.date}
                        </span>
                    </div>
                    <div className='flex text-yellow-500'>
                        {Array.from({ length: data.starPoint }).map((_, i) => (
                            <Star key={i} className='w-4 h-4 fill-current' />
                        ))}
                    </div>
                </div>
                <span className='block mt-3 text-neutral-6000 dark:text-neutral-300'>
                    {data.comment}
                </span>
            </div>
        </div>
    );
};

// üîπ G√°n avatar t·ª´ DEMO_AUTHORS cho 4 comment
const DEMO_COMMENTS: CommentListingDataType[] = [
    {
        name: 'Nguy·ªÖn VƒÉn A',
        avatar: DEMO_AUTHORS[0].avatar, // üëà l·∫•y ·∫£nh t·ª´ authors
        date: 'May 20, 2021',
        comment:
            'V·ªã tr√≠ tuy·ªát v·ªùi v√† nh√¢n vi√™n r·∫•t th√¢n thi·ªán. Gi∆∞·ªùng r·∫•t tho·∫£i m√°i v√† ph√≤ng r·∫•t s·∫°ch s·∫Ω. T√¥i ch·∫Øc ch·∫Øn s·∫Ω quay l·∫°i ƒë√¢y.',
        starPoint: 5,
    },
    {
        name: 'Tr·∫ßn Th·ªã B',
        avatar: DEMO_AUTHORS[1].avatar,
        date: 'June 10, 2021',
        comment:
            'Kh√°ch s·∫°n n·∫±m ngay trung t√¢m, ti·ªán ƒëi l·∫°i. Tuy nhi√™n ph√≤ng h∆°i nh·ªè h∆°n so v·ªõi h√¨nh ·∫£nh.',
        starPoint: 4,
    },
    {
        name: 'L√™ VƒÉn C',
        avatar: DEMO_AUTHORS[2].avatar,
        date: 'July 5, 2021',
        comment:
            'Gi√° c·∫£ h·ª£p l√Ω, d·ªãch v·ª• ·ªïn. M√¨nh ƒëi c√¥ng t√°c ·ªü ƒë√¢y kh√° tho·∫£i m√°i. Nh√¢n vi√™n l·ªÖ t√¢n h·ªó tr·ª£ nhanh.',
        starPoint: 4,
    },
    {
        name: 'Ph·∫°m Th·ªã D',
        avatar: DEMO_AUTHORS[3].avatar,
        date: 'August 15, 2021',
        comment:
            'View ƒë·∫πp, b·ªØa s√°ng ngon mi·ªáng. Ch·ªâ c√≥ ƒëi·ªÅu wifi h∆°i ch·∫≠p ch·ªùn v√†o bu·ªïi t·ªëi.',
        starPoint: 3,
    },
];

const CommentList = () => {
    return (
        <div className='space-y-6'>
            {DEMO_COMMENTS.map((item, idx) => (
                <CommentListing key={idx} data={item} />
            ))}
        </div>
    );
};

export default CommentList;
